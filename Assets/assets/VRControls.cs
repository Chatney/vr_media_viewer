//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/assets/VRControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @VRControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @VRControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""VRControls"",
    ""maps"": [
        {
            ""name"": ""Slideshow Controls"",
            ""id"": ""50bfdda2-d624-44db-96db-f28d194cf047"",
            ""actions"": [
                {
                    ""name"": ""ThumbstickMove _right"",
                    ""type"": ""Value"",
                    ""id"": ""d83ec402-a674-4e9d-8fea-e6d66e291adc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbstickMove_left"",
                    ""type"": ""Value"",
                    ""id"": ""99e0b106-c69e-409d-aea7-743c20b3fa65"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchModel"",
                    ""type"": ""Button"",
                    ""id"": ""7bb9ad19-733c-4d67-b201-cf492196c1bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Browser_back"",
                    ""type"": ""Button"",
                    ""id"": ""50eb5a24-7f8e-4e1c-9e91-fd7932f8307a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Video_PlayPause"",
                    ""type"": ""Button"",
                    ""id"": ""55c8c786-b0f8-40b3-bbe5-b62312d9f292"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Video_SkipForward"",
                    ""type"": ""Button"",
                    ""id"": ""42cb9a6c-4771-42c5-8f9d-3740eaa706ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Video_SkipBackward"",
                    ""type"": ""Button"",
                    ""id"": ""c097f78e-42a2-41db-b738-6e9afb77a96d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""e694778c-e5a8-42b0-935a-e979a03039ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9a0e1e92-5b1e-43e4-b152-545118a47df6"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbstickMove _right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1eb862af-85fa-476f-bebf-6436f40b2e5b"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbstickMove_left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d745be30-0eb0-4137-9808-3fe05bb8d85f"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Browser_back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b4ef860-c546-451b-8e50-ed1852f556d5"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Video_PlayPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6012a85f-c445-40d7-aabf-bcacaa33e8ac"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Video_SkipForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be731e35-ea18-40fa-a170-34070b2fad75"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Video_SkipBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18011f12-15c0-40af-aeca-29cd763efefd"",
                    ""path"": ""<XRController>{LeftHand}/menuButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Slideshow Controls
        m_SlideshowControls = asset.FindActionMap("Slideshow Controls", throwIfNotFound: true);
        m_SlideshowControls_ThumbstickMove_right = m_SlideshowControls.FindAction("ThumbstickMove _right", throwIfNotFound: true);
        m_SlideshowControls_ThumbstickMove_left = m_SlideshowControls.FindAction("ThumbstickMove_left", throwIfNotFound: true);
        m_SlideshowControls_SwitchModel = m_SlideshowControls.FindAction("SwitchModel", throwIfNotFound: true);
        m_SlideshowControls_Browser_back = m_SlideshowControls.FindAction("Browser_back", throwIfNotFound: true);
        m_SlideshowControls_Video_PlayPause = m_SlideshowControls.FindAction("Video_PlayPause", throwIfNotFound: true);
        m_SlideshowControls_Video_SkipForward = m_SlideshowControls.FindAction("Video_SkipForward", throwIfNotFound: true);
        m_SlideshowControls_Video_SkipBackward = m_SlideshowControls.FindAction("Video_SkipBackward", throwIfNotFound: true);
        m_SlideshowControls_Menu = m_SlideshowControls.FindAction("Menu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Slideshow Controls
    private readonly InputActionMap m_SlideshowControls;
    private List<ISlideshowControlsActions> m_SlideshowControlsActionsCallbackInterfaces = new List<ISlideshowControlsActions>();
    private readonly InputAction m_SlideshowControls_ThumbstickMove_right;
    private readonly InputAction m_SlideshowControls_ThumbstickMove_left;
    private readonly InputAction m_SlideshowControls_SwitchModel;
    private readonly InputAction m_SlideshowControls_Browser_back;
    private readonly InputAction m_SlideshowControls_Video_PlayPause;
    private readonly InputAction m_SlideshowControls_Video_SkipForward;
    private readonly InputAction m_SlideshowControls_Video_SkipBackward;
    private readonly InputAction m_SlideshowControls_Menu;
    public struct SlideshowControlsActions
    {
        private @VRControls m_Wrapper;
        public SlideshowControlsActions(@VRControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @ThumbstickMove_right => m_Wrapper.m_SlideshowControls_ThumbstickMove_right;
        public InputAction @ThumbstickMove_left => m_Wrapper.m_SlideshowControls_ThumbstickMove_left;
        public InputAction @SwitchModel => m_Wrapper.m_SlideshowControls_SwitchModel;
        public InputAction @Browser_back => m_Wrapper.m_SlideshowControls_Browser_back;
        public InputAction @Video_PlayPause => m_Wrapper.m_SlideshowControls_Video_PlayPause;
        public InputAction @Video_SkipForward => m_Wrapper.m_SlideshowControls_Video_SkipForward;
        public InputAction @Video_SkipBackward => m_Wrapper.m_SlideshowControls_Video_SkipBackward;
        public InputAction @Menu => m_Wrapper.m_SlideshowControls_Menu;
        public InputActionMap Get() { return m_Wrapper.m_SlideshowControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SlideshowControlsActions set) { return set.Get(); }
        public void AddCallbacks(ISlideshowControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_SlideshowControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SlideshowControlsActionsCallbackInterfaces.Add(instance);
            @ThumbstickMove_right.started += instance.OnThumbstickMove_right;
            @ThumbstickMove_right.performed += instance.OnThumbstickMove_right;
            @ThumbstickMove_right.canceled += instance.OnThumbstickMove_right;
            @ThumbstickMove_left.started += instance.OnThumbstickMove_left;
            @ThumbstickMove_left.performed += instance.OnThumbstickMove_left;
            @ThumbstickMove_left.canceled += instance.OnThumbstickMove_left;
            @SwitchModel.started += instance.OnSwitchModel;
            @SwitchModel.performed += instance.OnSwitchModel;
            @SwitchModel.canceled += instance.OnSwitchModel;
            @Browser_back.started += instance.OnBrowser_back;
            @Browser_back.performed += instance.OnBrowser_back;
            @Browser_back.canceled += instance.OnBrowser_back;
            @Video_PlayPause.started += instance.OnVideo_PlayPause;
            @Video_PlayPause.performed += instance.OnVideo_PlayPause;
            @Video_PlayPause.canceled += instance.OnVideo_PlayPause;
            @Video_SkipForward.started += instance.OnVideo_SkipForward;
            @Video_SkipForward.performed += instance.OnVideo_SkipForward;
            @Video_SkipForward.canceled += instance.OnVideo_SkipForward;
            @Video_SkipBackward.started += instance.OnVideo_SkipBackward;
            @Video_SkipBackward.performed += instance.OnVideo_SkipBackward;
            @Video_SkipBackward.canceled += instance.OnVideo_SkipBackward;
            @Menu.started += instance.OnMenu;
            @Menu.performed += instance.OnMenu;
            @Menu.canceled += instance.OnMenu;
        }

        private void UnregisterCallbacks(ISlideshowControlsActions instance)
        {
            @ThumbstickMove_right.started -= instance.OnThumbstickMove_right;
            @ThumbstickMove_right.performed -= instance.OnThumbstickMove_right;
            @ThumbstickMove_right.canceled -= instance.OnThumbstickMove_right;
            @ThumbstickMove_left.started -= instance.OnThumbstickMove_left;
            @ThumbstickMove_left.performed -= instance.OnThumbstickMove_left;
            @ThumbstickMove_left.canceled -= instance.OnThumbstickMove_left;
            @SwitchModel.started -= instance.OnSwitchModel;
            @SwitchModel.performed -= instance.OnSwitchModel;
            @SwitchModel.canceled -= instance.OnSwitchModel;
            @Browser_back.started -= instance.OnBrowser_back;
            @Browser_back.performed -= instance.OnBrowser_back;
            @Browser_back.canceled -= instance.OnBrowser_back;
            @Video_PlayPause.started -= instance.OnVideo_PlayPause;
            @Video_PlayPause.performed -= instance.OnVideo_PlayPause;
            @Video_PlayPause.canceled -= instance.OnVideo_PlayPause;
            @Video_SkipForward.started -= instance.OnVideo_SkipForward;
            @Video_SkipForward.performed -= instance.OnVideo_SkipForward;
            @Video_SkipForward.canceled -= instance.OnVideo_SkipForward;
            @Video_SkipBackward.started -= instance.OnVideo_SkipBackward;
            @Video_SkipBackward.performed -= instance.OnVideo_SkipBackward;
            @Video_SkipBackward.canceled -= instance.OnVideo_SkipBackward;
            @Menu.started -= instance.OnMenu;
            @Menu.performed -= instance.OnMenu;
            @Menu.canceled -= instance.OnMenu;
        }

        public void RemoveCallbacks(ISlideshowControlsActions instance)
        {
            if (m_Wrapper.m_SlideshowControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISlideshowControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_SlideshowControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SlideshowControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SlideshowControlsActions @SlideshowControls => new SlideshowControlsActions(this);
    public interface ISlideshowControlsActions
    {
        void OnThumbstickMove_right(InputAction.CallbackContext context);
        void OnThumbstickMove_left(InputAction.CallbackContext context);
        void OnSwitchModel(InputAction.CallbackContext context);
        void OnBrowser_back(InputAction.CallbackContext context);
        void OnVideo_PlayPause(InputAction.CallbackContext context);
        void OnVideo_SkipForward(InputAction.CallbackContext context);
        void OnVideo_SkipBackward(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
    }
}
